
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@using Microsoft.AspNetCore.Authorization
@inject SignInManager<ApplicationUser> SignInManager
@using IdentityModel;
@inject IAuthorizationService AuthorizationService
@inject UserManager<ApplicationUser> UserManager
<!-- Navbar -->
<nav class="main-header navbar navbar-expand navbar-white navbar-light">
    <!-- Left navbar links -->
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/" class="nav-link">Home</a>
        </li>

        @if (SignInManager.IsSignedIn(User) && User.Claims.Any(c => c.Type == JwtClaimTypes.Role && c.Value == "Admin"))
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="UserProfiles"
                   asp-action="Index">Users</a>
            </li>

        }

    </ul>



    <ul class="navbar-nav ml-auto">
        @if (SignInManager.IsSignedIn(User))
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="Home" asp-action="Index"
                   title="Welcome">Welcome @User.Identity.Name!</a>
            </li>
            <li class="nav-item">
                <form class="form-inline" asp-controller="Login" asp-action="Logout">
                    <button type="submit" class="nav-link btn btn-link text-info">Logout</button>
                </form>
            </li>
        }
        else
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="Login"
                   asp-action="Index">Login</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="Login"
                   asp-action="Register">Register</a>
            </li>
        }


    </ul>
</nav>
<!-- /.navbar -->